@using Microsoft.AspNetCore.Authorization;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using TCPI_PR_Portal.Data;
@using TCPI_PR_Portal.Services;
@using TCPI_PR_Portal.Shared;
@using System.Text;
@inject HttpClient HttpClient;
@inject IAuthService AuthService;
@inject ISnackbar Snackbar;
@inject NavigationManager Navigation;
@inject Solutaris.InfoWARE.ProtectedBrowserStorage.Services.IIWLocalStorageService LocalStorage;
@attribute [Authorize];

@page "/document-status/{DocEntry}";

<Title PageName="Requisition Slip Approval" Breadcrumb="_items" />

<EditForm Model="@PRHeader" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <MudGrid Spacing="2" Justify="Justify.Center">
        <MudItem xs="6">
            <MudPaper Elevation="0" Class="d-flex flex-column mud-width-full py-8 px-1 gap-2">
                <MudTextField @bind-Value="PRHeader.U_ProjectID" Label="Project ID" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_ProjName" Label="Project Name" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_Location" Label="Location" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_PRType" Label="PR Type" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_Branch" Label="Branch" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_Department" Label="Department" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Elevation="0" Class="d-flex flex-column mud-width-full py-8 px-4 gap-2">
                <MudTextField @bind-Value="PRHeader.U_DocNum" Label="Doc. No" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_DocStatus" Disabled="true" Label="Status" Variant="Variant.Outlined" Margin="Margin.Dense" />
                <MudDatePicker Label="Document Date" @bind-Date="PRHeader.U_TaxDate" Disabled="true" />
                <MudDatePicker Label="Required Date" @bind-Date="PRHeader.U_ReqDate" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_Urgency" Label="Urgency Priority" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_PreparedBy" Label="Prepared By" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />
                <MudTextField @bind-Value="PRHeader.U_ReviewedBy" Label="Reviewed By" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true" />


                @*<MudTextField @bind-Value="PRHeader.U_ApprovedBy1" Label="Approved By( Level 1)" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"/>
                <MudTextField @bind-Value="PRHeader.U_ApprovedBy2" Label="Approved By( Level 2)" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"/>
                <MudTextField @bind-Value="PRHeader.U_ApprovedBy3" Label="Approved By( Level 3)" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"/>
                <MudTextField @bind-Value="PRHeader.U_ApprovedBy4" Label="Approved By( Level 4)" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"/>
                <MudTextField @bind-Value="PRHeader.U_ApproverRemarks " Label="Approver Remarks" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"/>*@
            </MudPaper>
        </MudItem>
    </MudGrid>

    <MudTable Items="@PRLines" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped">
        <HeaderContent>
            <MudTh>#</MudTh>
            <MudTh style="white-space: nowrap!important;">Item Code</MudTh>
            <MudTh style="white-space: nowrap!important;">Item Description</MudTh>
            <MudTh style="white-space: nowrap!important;">Warehouse</MudTh>
            <MudTh style="white-space: nowrap!important;">Bin Location</MudTh>
            <MudTh style="white-space: nowrap!important;">Scope of Work</MudTh>
            <MudTh style="white-space: nowrap!important;">Scope Description</MudTh>
            <MudTh style="white-space: nowrap!important;">Material Code</MudTh>
            <MudTh style="white-space: nowrap!important;">Material Description</MudTh>
            <MudTh style="white-space: nowrap!important;">Quantity</MudTh>
            <MudTh style="white-space: nowrap!important;">Info Price</MudTh>
            <MudTh style="white-space: nowrap!important;">Units Of Measurement</MudTh>
            <MudTh style="white-space: nowrap!important;">Item Specification</MudTh>
            <MudTh style="white-space: nowrap!important;">Tax Code</MudTh>
            <MudTh style="white-space: nowrap!important;">On hand Quantity</MudTh>
            <MudTh style="white-space: nowrap!important;">Inventory Type</MudTh>
            <MudTh style="white-space: nowrap!important;">Inventory Purpose</MudTh>
        </HeaderContent>
        <RowTemplate Context="Items">
            <MudTd>
                <input type="hidden" @bind-value="@Items.Code" />
                <input type="hidden" @bind-value="@Items.Name" />
                <MudText>@(++index)</MudText>
                </MudTd>
                <MudTd DataLabel="Item Code">
                    @Items.U_ItemCode
                </MudTd>
                <MudTd DataLabel="Item Description">
                    @Items.U_Dscription
                </MudTd>
                <MudTd DataLabel="Warehouse">
                    @Items.U_WhsCode
                </MudTd>
                <MudTd DataLabel="Bin Location">
                    @Items.U_BinLoc
                </MudTd>
                <MudTd DataLabel="Scope of Work">
                    @Items.U_Scope
                </MudTd>
                <MudTd DataLabel="Scope Description">
                    @Items.U_ScopeDesc
                </MudTd>
                <MudTd DataLabel="Material Code">
                    @Items.U_MaterialCode
                </MudTd>
                <MudTd DataLabel="Material Description">
                    @Items.U_MaterialDesc
                </MudTd>
                <MudTd DataLabel="Quantity">
                    @Items.U_Quantity
                </MudTd>
                <MudTd DataLabel="Info Price">
                    @Items.U_InfoPrice
                </MudTd>
                <MudTd DataLabel="Units Of Measurement">
                    @Items.U_UomCode
                </MudTd>
                <MudTd DataLabel="Item Specification">
                    @Items.U_ItemSpecification
                </MudTd>
                <MudTd DataLabel="Tax Code">
                    @Items.U_TaxCode
                </MudTd>
                <MudTd DataLabel="On hand Quantity">
                    @Items.U_OnHandQuantity
                </MudTd>
                <MudTd DataLabel="Inventory Type">
                    @Items.U_InventoryType
                </MudTd>
                <MudTd DataLabel="Inventory Purpose">
                    @Items.U_InventoryPurpose
                </MudTd>
            </RowTemplate>
        </MudTable>

    <MudGrid Spacing="2" Justify="Justify.Center">
        <MudItem xs="6">
            <MudPaper Elevation="0" Class="d-flex flex-column mud-width-full py-8 px-1 gap-2">
                <MudTextField T="string" Label="Remarks" @bind-Value="PRHeader.U_Remarks" Variant="Variant.Outlined" Text="" Lines="3" Disabled="true" />
            </MudPaper>
        </MudItem>
        <MudItem xs="6" Class="d-flex flex-column justify-end">
            @if (LocalStorage.GetItem<string>("Role") == "Approver")
            {
            <MudPaper Elevation="0" Class="d-flex justify-end mud-width-full py-8 px-4 gap-2">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Check" Color="Color.Primary">Approve</MudButton>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Close" Color="Color.Error">Cancel</MudButton>
            </MudPaper>
            }
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [Parameter]
    public string DocEntry { get; set; }

    public int HeaderDocEntry;
    public int index = 0;
    // table settings
    private bool dense = false;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;

    private PRHeaderDto PRHeader = new PRHeaderDto();
    private List<PRLinesDto> PRLines = new List<PRLinesDto>();

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem> {
        new BreadcrumbItem("Document Status", href: "document-status", disabled: true),
        new BreadcrumbItem("Requisition Slip Approval", href: "approval")
    };

    // form validation
    bool success = false;
    private async Task OnSubmit(EditContext context)
    {
        HttpContent header = new StringContent(JsonConvert.SerializeObject(PRHeader), Encoding.UTF8, "application/json");
        var headerResponse = await HttpClient.PostAsync("U_FT_OPRQ", header);

        HttpContent lines = new StringContent(JsonConvert.SerializeObject(PRLines), Encoding.UTF8, "application/json");
        var linesResponse = await HttpClient.PostAsync("U_FT_PRQ1", lines);

        success = true;
        StateHasChanged();
    }

    // get method json ang makukua,
    protected override async Task OnInitializedAsync()
    {
        JObject FTOPRQ = await GetData($"U_FT_OPRQ?$filter=U_DocEntry eq '{DocEntry}'");
        PRHeader = FTOPRQ["value"].ToObject<PRHeaderDto>();

        string query = $"U_FT_PRQ1$filter=U_DocEntry eq '{DocEntry}'";
        JObject FTPRQ1;
        do
        {
            FTPRQ1 = await GetData(query);

            PRLines.AddRange(FTPRQ1["value"].ToObject<List<PRLinesDto>>());

            if (FTPRQ1.ContainsKey("odata.nextLink"))
                query = FTPRQ1["odata.nextLink"].ToString();
        } while (FTPRQ1.ContainsKey("odata.nextLink"));
    }

    async Task<JObject> GetData(string query)
    {
        using var response = await HttpClient.GetAsync(query);
        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Add("Session has expired", Severity.Error);
            AuthService.Logout();
            Navigation.NavigateTo("/");
        }
        string content = await response.Content.ReadAsStringAsync();
        return JObject.Parse(content);
    }
}